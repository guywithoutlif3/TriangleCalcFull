[{"C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\index.js":"1","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\App.js":"2","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\reportWebVitals.js":"3","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\Height.js":"4","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\Area.js":"5","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\Pythagoras.js":"6","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\List.js":"7","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\Winkel.js":"8","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\Sin.js":"9","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\Cos.js":"10","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\Tan.js":"11"},{"size":558,"mtime":1641556987646,"results":"12","hashOfConfig":"13"},{"size":2994,"mtime":1641556987633,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1641556987651,"results":"15","hashOfConfig":"13"},{"size":2567,"mtime":1641556987637,"results":"16","hashOfConfig":"13"},{"size":2573,"mtime":1641556987634,"results":"17","hashOfConfig":"13"},{"size":6660,"mtime":1641556987640,"results":"18","hashOfConfig":"13"},{"size":4199,"mtime":1641556987638,"results":"19","hashOfConfig":"13"},{"size":21204,"mtime":1641556987645,"results":"20","hashOfConfig":"13"},{"size":2068,"mtime":1641556987642,"results":"21","hashOfConfig":"13"},{"size":2068,"mtime":1641556987636,"results":"22","hashOfConfig":"13"},{"size":2068,"mtime":1641556987643,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xjnqdv",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\index.js",[],"C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\App.js",["55","56","57","58","59","60"],"import { useState, useEffect } from \"react\";\r\nimport { Form, Container, Row, Col, Alert } from \"react-bootstrap\";\r\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from \"react-if\";\r\nimport Pythagoras from \"./Pythagoras.js\";\r\nimport Winkel from \"./Winkel.js\";\r\nimport Height from \"./Height.js\";\r\nimport Area from \"./Area.js\"\r\nimport List from \"./List.js\"\r\nimport Sin from \"./Sin.js\"\r\nimport Cos from \"./Cos.js\"\r\nimport Tan from \"./Tan.js\"\r\n\r\nimport Logo from \"../logo.jpg\";\r\nfunction App() {\r\n  const [calcType, setCalcType] = useState(0);\r\n\r\n  return (\r\n    <div className=\"App\" >\r\n      <header className=\"App-header\">\r\n        <img\r\n          style={{\r\n            display: \"block\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginBottom: \"1%\",\r\n          }}\r\n          width={\"15%\"}\r\n          src={Logo}\r\n          alt=\"BigCo Inc. logo\"\r\n        />\r\n      </header>\r\n      <body>\r\n        <Container>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col xs={5}>\r\n              <Form.Select\r\n                onChange={(e) => {\r\n                  console.log(\"e.target.value\", e.target.value);\r\n                  setCalcType(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"0\">Was wollen Sie Berechnen</option>\r\n                <option value=\"pythagoras\">pythagoras</option>\r\n                <option value=\"Winkel\">Winkel</option>\r\n                <option value=\"Höhe\">Höhe</option>\r\n                <option value=\"Fläche\">Fläche</option>\r\n                <option value=\"Sin\">Sin</option>\r\n                <option value=\"Cos\">Cos</option>\r\n                <option value=\"Tan\">Tan</option>\r\n              </Form.Select>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        {/* Condition for rendering selected Calculation Method */}\r\n        <Switch>\r\n          <Case condition={calcType === \"pythagoras\"}>\r\n            <Pythagoras />\r\n          </Case>\r\n          <Case condition={calcType === \"Winkel\"}>\r\n            <Winkel />\r\n          </Case>\r\n          <Case condition={calcType === \"Höhe\"}>\r\n            <Height />\r\n          </Case>\r\n          <Case condition={calcType === \"Fläche\"}>\r\n            <Area />\r\n          </Case>\r\n          <Case condition={calcType === \"Sin\"}>\r\n            <Sin />\r\n          </Case>\r\n          <Case condition={calcType === \"Cos\"}>\r\n            <Cos />\r\n          </Case>\r\n          <Case condition={calcType === \"Tan\"}>\r\n            <Tan />\r\n          </Case>\r\n\r\n          <Default>\r\n            <Container>\r\n              <Row className=\"justify-content-md-center\">\r\n                <Col xs={5}>\r\n                  <Alert variant={\"primary\"}>\r\n                    Bitte wählen Sie eine Option!\r\n                  </Alert>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Default>\r\n        </Switch>\r\n\r\n\r\n        <List/>\r\n      </body>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\reportWebVitals.js",[],"C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\Height.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74"],"import { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from \"react-if\";\r\n\r\nexport default function Height() {\r\n  const [calcType1, setCalcType1] = useState(0.0);\r\n  const [area, setArea] = useState(0.0);\r\n  const [sideC, setSideC] = useState(0.0);\r\n  const [solution, setSolution] = useState(0.0);\r\n  const [error1, setError1] = useState(\"\");\r\n  const [items, setItems] = useState(JSON.parse(localStorage.getItem(\"storage\")));\r\n  useEffect(() => {\r\n    localStorage.setItem(\"storage\", JSON.stringify(items));\r\n  }, [items]);\r\n  useEffect(() => {\r\n    solutionInsertLocalStorage();\r\n  }, [solution]);\r\n  \r\n  const solutionInsertLocalStorage = () => {\r\n    setItems([\r\n      ...items,\r\n      {\r\n        solution: solution,\r\n        calcType: \"Höhe\",\r\n        sideA: null,\r\n        sideB: null,\r\n        sideC: null,\r\n        angleA: null,\r\n        angleB: null,\r\n        angleC: null,\r\n        error: error1\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={5}>\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                onChange={(e) => {\r\n                  setArea(parseFloat(e.target.value));\r\n                }}\r\n                placeholder=\"Fläche\"\r\n              />\r\n              <InputGroup.Text className=\"input\" placeholder=\"Fläche\">\r\n                cm²\r\n              </InputGroup.Text>\r\n            </InputGroup>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                onChange={(e) => setSideC(parseFloat(e.target.value))}\r\n                placeholder=\"Seite γ\"\r\n              />\r\n              <InputGroup.Text className=\"input\" placeholder=\"Seite γ\">\r\n                cm\r\n              </InputGroup.Text>\r\n            </InputGroup>\r\n\r\n            <Row className=\"justify-content-md-center\">\r\n              <Button\r\n                onClick={() => {\r\n                  setSolution((2 * area) / sideC);\r\n                }}\r\n                variant=\"primary\"\r\n              >\r\n                Berechnen!\r\n              </Button>\r\n              <h1\r\n                style={{ textAlign: \"center\" }}\r\n                className=\"justify-content-md-center\"\r\n              >\r\n                {solution}\r\n              </h1>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\Area.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"import { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from \"react-if\";\r\n\r\nexport default function Height() {\r\n  const [calcType1, setCalcType1] = useState(0.0);\r\n  const [height, setHeight] = useState(0.0);\r\n  const [sideC, setSideC] = useState(0.0);\r\n  const [solution, setSolution] = useState(0.0);\r\n  const [error1, setError1] = useState(\"\");\r\n  const [items, setItems] = useState(JSON.parse(localStorage.getItem(\"storage\")));\r\n  useEffect(() => {\r\n    localStorage.setItem(\"storage\", JSON.stringify(items));\r\n  }, [items]);\r\n  useEffect(() => {\r\n    solutionInsertLocalStorage();\r\n  }, [solution]);\r\n\r\n\r\n  const solutionInsertLocalStorage = () => {\r\n    setItems([\r\n      ...items,\r\n      {\r\n        solution: solution,\r\n        calcType: \"Fläche\",\r\n        sideA: null,\r\n        sideB: null,\r\n        sideC: null,\r\n        angleA: null,\r\n        angleB: null,\r\n        angleC: null,\r\n        error: error1\r\n      },\r\n    ]);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={5}>\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                onChange={(e) => {\r\n                  setHeight(parseFloat(e.target.value));\r\n                }}\r\n                placeholder=\"Höhe\"\r\n              />\r\n              <InputGroup.Text className=\"input\" placeholder=\"Höhe\">\r\n                cm\r\n              </InputGroup.Text>\r\n            </InputGroup>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                onChange={(e) => setSideC(parseFloat(e.target.value))}\r\n                placeholder=\"Seite γ\"\r\n              />\r\n              <InputGroup.Text className=\"input\" placeholder=\"Seite γ\">\r\n                cm\r\n              </InputGroup.Text>\r\n            </InputGroup>\r\n\r\n            <Row className=\"justify-content-md-center\">\r\n              <Button\r\n                onClick={() => {\r\n                  setSolution((height * sideC) / 2);\r\n                }}\r\n                variant=\"primary\"\r\n              >\r\n                Berechnen!\r\n              </Button>\r\n              <h1\r\n                style={{ textAlign: \"center\" }}\r\n                className=\"justify-content-md-center\"\r\n              >\r\n                {solution}\r\n              </h1>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\Pythagoras.js",["89","90","91","92","93","94","95"],"import { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from \"react-if\";\r\nexport default function Pythagoras() {\r\n  const [calcType1, setCalcType1] = useState(0.0);\r\n  const [sideA, setSideA] = useState(0.0);\r\n  const [sideB, setSideB] = useState(0.0);\r\n  const [sideC, setSideC] = useState(0.0);\r\n  const [solution, setSolution] = useState(0.0);\r\n  const [error1, setError1] = useState(\"\");\r\n  const [items, setItems] = useState(\r\n    JSON.parse(localStorage.getItem(\"storage\"))\r\n  );\r\n  useEffect(() => {\r\n    localStorage.setItem(\"storage\", JSON.stringify(items));\r\n  }, [items]);\r\n  useEffect(() => {\r\n    solutionInsertLocalStorage();\r\n    setError1(\"\");\r\n  }, [solution]);\r\n  const areTheNumbersAlmostEqual = (num1, num2) => {\r\n    return Math.abs( num1 - num2 ) < Number.EPSILON;\r\n}\r\n  const calculateSolution = () => {\r\n    if (calcType1 === \"Hypotenuse / Seite γ\") {\r\n      setError1(\"\");\r\n    } else if (calcType1 === \"Seite α / Seite β\") {\r\n      if (sideC > sideB   ) {\r\n        setError1(\"\");\r\n      } else if(sideC <= sideB ){\r\n        setError1(\"Invalider input: stellen sie Sicher das γ > α/β\");\r\n      }\r\n    }\r\n  };\r\n  const solutionInsertLocalStorage = () => {\r\n    setItems([\r\n      ...items,\r\n      {\r\n        solution: solution,\r\n        calcType: calcType1,\r\n        sideA: sideA,\r\n        sideB: sideB,\r\n        sideC: sideC,\r\n        angleA: null,\r\n        angleB: null,\r\n        angleC: null,\r\n        error: error1\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={5}>\r\n            <Form.Select\r\n              onChange={(e) => {\r\n                console.log(\"e.target.value\", e.target.value);\r\n                setCalcType1(e.target.value);\r\n              }}\r\n            >\r\n              <option value=\"0\">Welche Seite wollen Sie Berechnen</option>\r\n              <option value=\"Hypotenuse / Seite γ\">Hypotenuse / Seite γ</option>\r\n              <option value=\"Seite α / Seite β\">Seite α / Seite β</option>\r\n            </Form.Select>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/* Condition for rendering selected Calculation Method for which Side */}\r\n      <Switch>\r\n        {/*  Condtion for Calculate Side C*/}\r\n        <Case condition={calcType1 === \"Hypotenuse / Seite γ\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    onChange={(e) => {\r\n                      setSideA(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite α\"\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite α\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    onChange={(e) => setSideB(parseFloat(e.target.value))}\r\n                    placeholder=\"Seite β\"\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite β\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      let result =\r\n                        Math.round(\r\n                          Math.sqrt(Math.pow(sideA, 2) + Math.pow(sideB, 2)) *\r\n                            10000\r\n                        ) / 10000;\r\n                      setSideC(result);\r\n                      setSolution(result);\r\n                      calculateSolution();\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/*  Condtion for Calculate Side A / Side B */}\r\n        <Case condition={calcType1 === \"Seite α / Seite β\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    onChange={(e) => {\r\n                      setSideB(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite β\"\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite β\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    onChange={(e) => setSideC(parseFloat(e.target.value))}\r\n                    placeholder=\"Hypotenuse / Seite γ\"\r\n                  />\r\n                  <InputGroup.Text\r\n                    className=\"input\"\r\n                    placeholder=\"Hypotenuse / Seite γ\"\r\n                  >\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      \r\n                      let result =\r\n                        Math.round(\r\n                          Math.sqrt(Math.pow(sideC, 2) - Math.pow(sideB, 2)) *\r\n                            10000\r\n                        ) / 10000;\r\n                      setSideA(result);\r\n                      setSolution(result);\r\n                      calculateSolution();\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n\r\n                  \r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/* Condtion for Default value */}\r\n        <Default>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <Alert variant={\"primary\"}>\r\n                  Bitte wählen Sie eine Seite zum Ausrechnen!\r\n                </Alert>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Default>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\List.js",["96","97","98","99","100","101","102","103","104","105","106","107"],"import { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  ListGroup,\r\n  InputGroup,\r\n  Button,\r\n  Alert\r\n} from \"react-bootstrap\";\r\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from \"react-if\";\r\nimport Turtle from \"react-turtle\";\r\nexport default function List() {\r\n  const [newItem, setnewItem] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n  let counter = 0;\r\n  useEffect(() => {\r\n    setInterval(function () {\r\n      getLocalStorage();\r\n    }, 1000);\r\n  }, []);\r\n  const getLocalStorage = () => {\r\n    let storage = localStorage.getItem(\"storage\");\r\n    if (storage == null || storage.length === 0) {\r\n      localStorage.setItem(\"storage\", JSON.stringify([]));\r\n      storage = localStorage.getItem(\"storage\");\r\n    } else {\r\n      setItems(JSON.parse(storage));\r\n    }\r\n  };\r\n  const resetList = () => {\r\n    localStorage.clear();\r\n    window.location.reload(false);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={5}>\r\n            <div>\r\n              <ListGroup style={{ margin: \"3%\" }}>\r\n                {items\r\n                  .slice(0)\r\n                  .reverse()\r\n                  .map((e) => {\r\n                    return (\r\n                      <If condition={e.solution !== 0}>\r\n                        <Then>\r\n                          <ListGroup.Item style={{ padding: \"10%\" }}>\r\n                            <p>\r\n                              <strong style={{ fontSize: \"150%\" }}>\r\n                                Lösung: : {e.solution}\r\n                              </strong>\r\n                            </p>\r\n                            <p>\r\n                              <strong>Was ?: </strong> {e.calcType}\r\n                            </p>\r\n                            <If condition={e.sideA !== null}>\r\n                              <Then>\r\n                                <p>\r\n                                  <strong>Seite A: </strong>\r\n                                  {e.sideA}\r\n                                </p>\r\n                                <p>\r\n                                  <strong>Seite B: </strong>\r\n                                  {e.sideB}\r\n                                </p>\r\n                                <p>\r\n                                  <strong>Seite C: </strong>\r\n                                  {e.sideC}\r\n                                </p>\r\n                              </Then>\r\n                            </If>\r\n                            <If condition={e.angleA !== null && e.error == \"\"}>\r\n                              <Then>\r\n                                <p>\r\n                                  <strong>Winkel A: </strong>\r\n                                  {e.angleA}\r\n                                </p>\r\n                                <p>\r\n                                  <strong>Winkel B: </strong>\r\n                                  {e.angleB}\r\n                                </p>\r\n                                <p>\r\n                                  <strong>Winkel C: </strong>\r\n                                  {e.angleC}\r\n                                </p>\r\n                              </Then>\r\n                            </If>\r\n                            <If condition={e.error !== \"\"}>\r\n                              <Then>\r\n                                <p>\r\n                                <Alert variant={\"danger\"}>{e.error}</Alert> \r\n                                </p>\r\n                              </Then>\r\n                            </If>\r\n                          </ListGroup.Item>\r\n                        </Then>\r\n                      </If>\r\n                    );\r\n                  })}\r\n              </ListGroup>\r\n              <Row className=\"justify-content-md-center\">\r\n                <Button\r\n                  onClick={() => {\r\n                    resetList();\r\n                  }}\r\n                  variant=\"primary\"\r\n                >\r\n                  Reset List!\r\n                </Button>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\Winkel.js",["108","109","110","111","112"],"import { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from \"react-if\";\r\n\r\nexport default function Winkel() {\r\n  const [calcType1, setCalcType1] = useState(0.0);\r\n  const [sideA, setSideA] = useState(0.0);\r\n  const [sideB, setSideB] = useState(0.0);\r\n  const [sideC, setSideC] = useState(0.0);\r\n  const [angleA, setAngleA] = useState(0.0);\r\n  const [angleB, setAngleB] = useState(0.0);\r\n  const [angleC, setAngleC] = useState(0.0);\r\n  const [solution, setSolution] = useState(0.0);\r\n  const [error1, setError1] = useState(\"\");\r\n  const [items, setItems] = useState(\r\n    JSON.parse(localStorage.getItem(\"storage\"))\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"storage\", JSON.stringify(items));\r\n  }, [items]);\r\n  useEffect(() => {\r\n    solutionInsertLocalStorage();\r\n  }, [solution]);\r\n  const solutionInsertLocalStorage = () => {\r\n    setItems([\r\n      ...items,\r\n      {\r\n        solution: solution,\r\n        calcType: calcType1,\r\n        sideA: null,\r\n        sideB: null,\r\n        sideC: null,\r\n        angleA: angleA,\r\n        angleB: angleB,\r\n        angleC: angleC,\r\n        error: error1\r\n      },\r\n    ]);\r\n  };\r\n  function toRadians(angle) {\r\n    return angle * (Math.PI / 180);\r\n  }\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={5}>\r\n            <Form.Select\r\n              onChange={(e) => {\r\n                console.log(\"e.target.value\", e.target.value);\r\n                setCalcType1(e.target.value);\r\n              }}\r\n              onFocus={(e) => {\r\n                e.target.value = \"0\";\r\n              }}\r\n            >\r\n              <option value=\"0\">Welche Seite wollen Sie Berechnen</option>\r\n              <option value=\"Angle A from a, B, b\">Angle A from a, B, b</option>\r\n              <option value=\"Angle A from a, C, c\">Angle A from a, C, c</option>\r\n              <option value=\"Angle B from b, A, a\">Angle B from b, A, a</option>\r\n              <option value=\"Angle B from b, C, c\">Angle B from b, C, c</option>\r\n              <option value=\"Angle C from c, A, a\">Angle C from c, A, a</option>\r\n              <option value=\"Angle C from c, B, b\">Angle C from c, B, b</option>\r\n            </Form.Select>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/* Condition for rendering selected Calculation Method for which Side */}\r\n      <Switch>\r\n        {/*  Angle A from a, B, b*/}\r\n        <Case condition={calcType1 === \"Angle A from a, B, b\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      setSideA(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite α\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite α\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 180) {\r\n                        setError1(\"Winkel ist 180 oder grösser\");\r\n                      } else {\r\n                        setError1(\"\");\r\n                        setAngleB(parseFloat(e.target.value));\r\n                      }\r\n                    }}\r\n                    placeholder=\"Winkel β\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel β\">\r\n                    °\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => setSideB(parseFloat(e.target.value))}\r\n                    placeholder=\"Seite β\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite β\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      let result =\r\n                        Math.asin(\r\n                          (toRadians(sideA) * Math.sin(toRadians(angleB))) /\r\n                            toRadians(sideB)\r\n                        ) *\r\n                        (180 / Math.PI);\r\n                      setAngleA(result);\r\n                      setAngleC(180 - result - angleB);\r\n                      setSolution(result);\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/*  Angle A from a, C, c*/}\r\n        <Case condition={calcType1 === \"Angle A from a, C, c\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      setSideA(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite α\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite α\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 180) {\r\n                        setError1(\"Winkel ist 180 oder grösser\");\r\n                      } else {\r\n                        setError1(\"\");\r\n                        setAngleC(parseFloat(e.target.value));\r\n                      }\r\n                    }}\r\n                    placeholder=\"Winkel γ\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel β\">\r\n                    °\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => setSideC(parseFloat(e.target.value))}\r\n                    placeholder=\"Seite γ\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite β\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      let result =\r\n                        Math.asin(\r\n                          (toRadians(sideA) * Math.sin(toRadians(angleC))) /\r\n                            toRadians(sideC)\r\n                        ) *\r\n                        (180 / Math.PI);\r\n                      setAngleA(result);\r\n                      setAngleB(180 - result - angleC);\r\n                      setSolution(result);\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/*  Angle B from b, A, a */}\r\n        <Case condition={calcType1 === \"Angle B from b, A, a\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      setSideB(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite β\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel β\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 180) {\r\n                        setError1(\"Winkel ist 180 oder grösser\");\r\n                      } else {\r\n                        setError1(\"\");\r\n                        setAngleA(parseFloat(e.target.value));\r\n                      }\r\n                    }}\r\n                    placeholder=\"Winkel α\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel β\">\r\n                    °\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => setSideA(parseFloat(e.target.value))}\r\n                    placeholder=\"Seite α\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite β\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      let result =\r\n                        Math.asin(\r\n                          (toRadians(sideB) * Math.sin(toRadians(angleA))) /\r\n                            toRadians(sideA)\r\n                        ) *\r\n                        (180 / Math.PI);\r\n                      setAngleB(result);\r\n                      setAngleC(180 - result - angleA);\r\n                      setSolution(result);\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/*  Angle B from b, C, c */}\r\n        <Case condition={calcType1 === \"Angle B from b, C, c\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      setSideB(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite β\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel β\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 180) {\r\n                        setError1(\"Winkel ist 180 oder grösser\");\r\n                      } else {\r\n                        setError1(\"\");\r\n                        setAngleC(parseFloat(e.target.value));\r\n                      }\r\n                    }}\r\n                    placeholder=\"Winkel γ\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel β\">\r\n                    °\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => setSideC(parseFloat(e.target.value))}\r\n                    placeholder=\"Seite γ\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite β\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      let result =\r\n                        Math.asin(\r\n                          (toRadians(sideB) * Math.sin(toRadians(angleC))) /\r\n                            toRadians(sideC)\r\n                        ) *\r\n                        (180 / Math.PI);\r\n                      setAngleB(result);\r\n                      setAngleC(180 - result - angleC);\r\n                      setSolution(result);\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/*  Angle C from c, A, a */}\r\n        <Case condition={calcType1 === \"Angle C from c, A, a\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      setSideC(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite γ\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel β\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 180) {\r\n                        setError1(\"Winkel ist 180 oder grösser\");\r\n                      } else {\r\n                        setError1(\"\");\r\n                        setAngleA(parseFloat(e.target.value));\r\n                      }\r\n                    }}\r\n                    placeholder=\"Winkel α\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel β\">\r\n                    °\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => setSideA(parseFloat(e.target.value))}\r\n                    placeholder=\"Seite α\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite β\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      let result =\r\n                        Math.asin(\r\n                          (toRadians(sideC) * Math.sin(toRadians(angleA))) /\r\n                            toRadians(sideA)\r\n                        ) *\r\n                        (180 / Math.PI);\r\n                      setAngleC(result);\r\n                      setAngleB(180 - result - angleA);\r\n                      setSolution(result);\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/*  Angle C from c, B, b */}\r\n        <Case condition={calcType1 === \"Angle C from c, B, b\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      setSideC(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite γ\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel β\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 180) {\r\n                        setError1(\"Winkel ist 180 oder grösser\");\r\n                      } else {\r\n                        setError1(\"\");\r\n                        setAngleB(parseFloat(e.target.value));\r\n                      }\r\n                    }}\r\n                    placeholder=\"Winkel β\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel β\">\r\n                    °\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => setSideB(parseFloat(e.target.value))}\r\n                    placeholder=\"Seite β\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite β\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      let result =\r\n                        Math.asin(\r\n                          (toRadians(sideC) * Math.sin(toRadians(angleB))) /\r\n                            toRadians(sideB)\r\n                        ) *\r\n                        (180 / Math.PI);\r\n                      setAngleC(result);\r\n                      setAngleA(180 - result - angleB);\r\n                      setSolution(result);\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/* Condtion for Default value */}\r\n        <Default>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <Alert variant={\"primary\"}>\r\n                  Bitte wählen Sie eine Seite zum Ausrechnen!\r\n                </Alert>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Default>\r\n      </Switch>\r\n      <If condition={error1 != \"\"}>\r\n        <Then>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <Alert variant={\"danger\"}>{error1}</Alert>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Then>\r\n      </If>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\Sin.js",["113","114","115","116","117","118","119","120","121","122","123","124"],"import { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from \"react-if\";\r\n\r\nexport default function Sin() {\r\n  const [input, setInput] = useState(0.0);\r\n  const [solution, setSolution] = useState(0.0);\r\n  const [error1, setError1] = useState(\"\");\r\n  const [items, setItems] = useState(JSON.parse(localStorage.getItem(\"storage\")));\r\n  useEffect(() => {\r\n    localStorage.setItem(\"storage\", JSON.stringify(items));\r\n  }, [items]);\r\n  useEffect(() => {\r\n    solutionInsertLocalStorage();\r\n  }, [solution]);\r\n\r\n\r\n  const solutionInsertLocalStorage = () => {\r\n    setItems([\r\n      ...items,\r\n      {\r\n        solution: solution,\r\n        calcType: \"Sin\",\r\n        sideA: null,\r\n        sideB: null,\r\n        sideC: null,\r\n        angleA: null,\r\n        angleB: null,\r\n        angleC: null,\r\n        error: error1\r\n      },\r\n    ]);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={5}>\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                onChange={(e) => setInput(parseFloat(e.target.value))}\r\n                placeholder=\"\"\r\n              />\r\n              <InputGroup.Text className=\"input\" placeholder=\"\">\r\n                x\r\n              </InputGroup.Text>\r\n            </InputGroup>\r\n\r\n            <Row className=\"justify-content-md-center\">\r\n              <Button\r\n                onClick={() => {\r\n                  setSolution(Math.sin(input * Math.PI / 180));\r\n                }}\r\n                variant=\"primary\"\r\n              >\r\n                Berechnen!\r\n              </Button>\r\n              <h1\r\n                style={{ textAlign: \"center\" }}\r\n                className=\"justify-content-md-center\"\r\n              >\r\n                {solution}\r\n              </h1>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\Cos.js",["125","126","127","128","129","130","131","132","133","134","135","136"],"import { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from \"react-if\";\r\n\r\nexport default function Cos() {\r\n  const [input, setInput] = useState(0.0);\r\n  const [solution, setSolution] = useState(0.0);\r\n  const [error1, setError1] = useState(\"\");\r\n  const [items, setItems] = useState(JSON.parse(localStorage.getItem(\"storage\")));\r\n  useEffect(() => {\r\n    localStorage.setItem(\"storage\", JSON.stringify(items));\r\n  }, [items]);\r\n  useEffect(() => {\r\n    solutionInsertLocalStorage();\r\n  }, [solution]);\r\n\r\n\r\n  const solutionInsertLocalStorage = () => {\r\n    setItems([\r\n      ...items,\r\n      {\r\n        solution: solution,\r\n        calcType: \"Cos\",\r\n        sideA: null,\r\n        sideB: null,\r\n        sideC: null,\r\n        angleA: null,\r\n        angleB: null,\r\n        angleC: null,\r\n        error: error1\r\n      },\r\n    ]);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={5}>\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                onChange={(e) => setInput(parseFloat(e.target.value))}\r\n                placeholder=\"\"\r\n              />\r\n              <InputGroup.Text className=\"input\" placeholder=\"\">\r\n                x\r\n              </InputGroup.Text>\r\n            </InputGroup>\r\n\r\n            <Row className=\"justify-content-md-center\">\r\n              <Button\r\n                onClick={() => {\r\n                  setSolution(Math.cos(input * Math.PI / 180));\r\n                }}\r\n                variant=\"primary\"\r\n              >\r\n                Berechnen!\r\n              </Button>\r\n              <h1\r\n                style={{ textAlign: \"center\" }}\r\n                className=\"justify-content-md-center\"\r\n              >\r\n                {solution}\r\n              </h1>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\sever\\Desktop\\Mahte Programm\\Maht App\\TriangleCalculator\\src\\components\\Tan.js",["137","138","139","140","141","142","143","144","145","146","147","148"],"import { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from \"react-if\";\r\n\r\nexport default function Tan() {\r\n  const [input, setInput] = useState(0.0);\r\n  const [solution, setSolution] = useState(0.0);\r\n  const [error1, setError1] = useState(\"\");\r\n  const [items, setItems] = useState(JSON.parse(localStorage.getItem(\"storage\")));\r\n  useEffect(() => {\r\n    localStorage.setItem(\"storage\", JSON.stringify(items));\r\n  }, [items]);\r\n  useEffect(() => {\r\n    solutionInsertLocalStorage();\r\n  }, [solution]);\r\n\r\n\r\n  const solutionInsertLocalStorage = () => {\r\n    setItems([\r\n      ...items,\r\n      {\r\n        solution: solution,\r\n        calcType: \"Tan\",\r\n        sideA: null,\r\n        sideB: null,\r\n        sideC: null,\r\n        angleA: null,\r\n        angleB: null,\r\n        angleC: null,\r\n        error: error1\r\n      },\r\n    ]);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={5}>\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                onChange={(e) => setInput(parseFloat(e.target.value))}\r\n                placeholder=\"\"\r\n              />\r\n              <InputGroup.Text className=\"input\" placeholder=\"\">\r\n                x\r\n              </InputGroup.Text>\r\n            </InputGroup>\r\n\r\n            <Row className=\"justify-content-md-center\">\r\n              <Button\r\n                onClick={() => {\r\n                  setSolution(Math.tan(input * Math.PI / 180));\r\n                }}\r\n                variant=\"primary\"\r\n              >\r\n                Berechnen!\r\n              </Button>\r\n              <h1\r\n                style={{ textAlign: \"center\" }}\r\n                className=\"justify-content-md-center\"\r\n              >\r\n                {solution}\r\n              </h1>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"149","severity":1,"message":"150","line":1,"column":20,"nodeType":"151","messageId":"152","endLine":1,"endColumn":29},{"ruleId":"149","severity":1,"message":"153","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":12},{"ruleId":"149","severity":1,"message":"154","line":3,"column":14,"nodeType":"151","messageId":"152","endLine":3,"endColumn":18},{"ruleId":"149","severity":1,"message":"155","line":3,"column":20,"nodeType":"151","messageId":"152","endLine":3,"endColumn":24},{"ruleId":"149","severity":1,"message":"156","line":3,"column":26,"nodeType":"151","messageId":"152","endLine":3,"endColumn":30},{"ruleId":"149","severity":1,"message":"157","line":3,"column":32,"nodeType":"151","messageId":"152","endLine":3,"endColumn":38},{"ruleId":"149","severity":1,"message":"158","line":3,"column":3,"nodeType":"151","messageId":"152","endLine":3,"endColumn":7},{"ruleId":"149","severity":1,"message":"159","line":7,"column":3,"nodeType":"151","messageId":"152","endLine":7,"endColumn":8},{"ruleId":"149","severity":1,"message":"153","line":12,"column":10,"nodeType":"151","messageId":"152","endLine":12,"endColumn":12},{"ruleId":"149","severity":1,"message":"154","line":12,"column":14,"nodeType":"151","messageId":"152","endLine":12,"endColumn":18},{"ruleId":"149","severity":1,"message":"155","line":12,"column":20,"nodeType":"151","messageId":"152","endLine":12,"endColumn":24},{"ruleId":"149","severity":1,"message":"156","line":12,"column":26,"nodeType":"151","messageId":"152","endLine":12,"endColumn":30},{"ruleId":"149","severity":1,"message":"157","line":12,"column":32,"nodeType":"151","messageId":"152","endLine":12,"endColumn":38},{"ruleId":"149","severity":1,"message":"160","line":12,"column":40,"nodeType":"151","messageId":"152","endLine":12,"endColumn":46},{"ruleId":"149","severity":1,"message":"161","line":12,"column":48,"nodeType":"151","messageId":"152","endLine":12,"endColumn":52},{"ruleId":"149","severity":1,"message":"162","line":12,"column":54,"nodeType":"151","messageId":"152","endLine":12,"endColumn":61},{"ruleId":"149","severity":1,"message":"163","line":15,"column":10,"nodeType":"151","messageId":"152","endLine":15,"endColumn":19},{"ruleId":"149","severity":1,"message":"164","line":15,"column":21,"nodeType":"151","messageId":"152","endLine":15,"endColumn":33},{"ruleId":"149","severity":1,"message":"165","line":19,"column":18,"nodeType":"151","messageId":"152","endLine":19,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":26,"column":6,"nodeType":"168","endLine":26,"endColumn":16,"suggestions":"169"},{"ruleId":"149","severity":1,"message":"158","line":3,"column":3,"nodeType":"151","messageId":"152","endLine":3,"endColumn":7},{"ruleId":"149","severity":1,"message":"159","line":7,"column":3,"nodeType":"151","messageId":"152","endLine":7,"endColumn":8},{"ruleId":"149","severity":1,"message":"153","line":12,"column":10,"nodeType":"151","messageId":"152","endLine":12,"endColumn":12},{"ruleId":"149","severity":1,"message":"154","line":12,"column":14,"nodeType":"151","messageId":"152","endLine":12,"endColumn":18},{"ruleId":"149","severity":1,"message":"155","line":12,"column":20,"nodeType":"151","messageId":"152","endLine":12,"endColumn":24},{"ruleId":"149","severity":1,"message":"156","line":12,"column":26,"nodeType":"151","messageId":"152","endLine":12,"endColumn":30},{"ruleId":"149","severity":1,"message":"157","line":12,"column":32,"nodeType":"151","messageId":"152","endLine":12,"endColumn":38},{"ruleId":"149","severity":1,"message":"160","line":12,"column":40,"nodeType":"151","messageId":"152","endLine":12,"endColumn":46},{"ruleId":"149","severity":1,"message":"161","line":12,"column":48,"nodeType":"151","messageId":"152","endLine":12,"endColumn":52},{"ruleId":"149","severity":1,"message":"162","line":12,"column":54,"nodeType":"151","messageId":"152","endLine":12,"endColumn":61},{"ruleId":"149","severity":1,"message":"163","line":15,"column":10,"nodeType":"151","messageId":"152","endLine":15,"endColumn":19},{"ruleId":"149","severity":1,"message":"164","line":15,"column":21,"nodeType":"151","messageId":"152","endLine":15,"endColumn":33},{"ruleId":"149","severity":1,"message":"165","line":19,"column":18,"nodeType":"151","messageId":"152","endLine":19,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":26,"column":6,"nodeType":"168","endLine":26,"endColumn":16,"suggestions":"170"},{"ruleId":"149","severity":1,"message":"153","line":12,"column":10,"nodeType":"151","messageId":"152","endLine":12,"endColumn":12},{"ruleId":"149","severity":1,"message":"154","line":12,"column":14,"nodeType":"151","messageId":"152","endLine":12,"endColumn":18},{"ruleId":"149","severity":1,"message":"155","line":12,"column":20,"nodeType":"151","messageId":"152","endLine":12,"endColumn":24},{"ruleId":"149","severity":1,"message":"156","line":12,"column":26,"nodeType":"151","messageId":"152","endLine":12,"endColumn":30},{"ruleId":"149","severity":1,"message":"157","line":12,"column":32,"nodeType":"151","messageId":"152","endLine":12,"endColumn":38},{"ruleId":"166","severity":1,"message":"167","line":29,"column":6,"nodeType":"168","endLine":29,"endColumn":16,"suggestions":"171"},{"ruleId":"149","severity":1,"message":"172","line":30,"column":9,"nodeType":"151","messageId":"152","endLine":30,"endColumn":33},{"ruleId":"149","severity":1,"message":"173","line":8,"column":3,"nodeType":"151","messageId":"152","endLine":8,"endColumn":13},{"ruleId":"149","severity":1,"message":"155","line":12,"column":20,"nodeType":"151","messageId":"152","endLine":12,"endColumn":24},{"ruleId":"149","severity":1,"message":"156","line":12,"column":26,"nodeType":"151","messageId":"152","endLine":12,"endColumn":30},{"ruleId":"149","severity":1,"message":"157","line":12,"column":32,"nodeType":"151","messageId":"152","endLine":12,"endColumn":38},{"ruleId":"149","severity":1,"message":"160","line":12,"column":40,"nodeType":"151","messageId":"152","endLine":12,"endColumn":46},{"ruleId":"149","severity":1,"message":"161","line":12,"column":48,"nodeType":"151","messageId":"152","endLine":12,"endColumn":52},{"ruleId":"149","severity":1,"message":"162","line":12,"column":54,"nodeType":"151","messageId":"152","endLine":12,"endColumn":61},{"ruleId":"149","severity":1,"message":"174","line":13,"column":8,"nodeType":"151","messageId":"152","endLine":13,"endColumn":14},{"ruleId":"149","severity":1,"message":"175","line":15,"column":10,"nodeType":"151","messageId":"152","endLine":15,"endColumn":17},{"ruleId":"149","severity":1,"message":"176","line":15,"column":19,"nodeType":"151","messageId":"152","endLine":15,"endColumn":29},{"ruleId":"149","severity":1,"message":"177","line":17,"column":7,"nodeType":"151","messageId":"152","endLine":17,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":76,"column":73,"nodeType":"180","messageId":"181","endLine":76,"endColumn":75},{"ruleId":"149","severity":1,"message":"155","line":12,"column":20,"nodeType":"151","messageId":"152","endLine":12,"endColumn":24},{"ruleId":"149","severity":1,"message":"156","line":12,"column":26,"nodeType":"151","messageId":"152","endLine":12,"endColumn":30},{"ruleId":"149","severity":1,"message":"157","line":12,"column":32,"nodeType":"151","messageId":"152","endLine":12,"endColumn":38},{"ruleId":"166","severity":1,"message":"167","line":33,"column":6,"nodeType":"168","endLine":33,"endColumn":16,"suggestions":"182"},{"ruleId":"178","severity":1,"message":"183","line":556,"column":29,"nodeType":"180","messageId":"181","endLine":556,"endColumn":31},{"ruleId":"149","severity":1,"message":"158","line":3,"column":3,"nodeType":"151","messageId":"152","endLine":3,"endColumn":7},{"ruleId":"149","severity":1,"message":"159","line":7,"column":3,"nodeType":"151","messageId":"152","endLine":7,"endColumn":8},{"ruleId":"149","severity":1,"message":"153","line":12,"column":10,"nodeType":"151","messageId":"152","endLine":12,"endColumn":12},{"ruleId":"149","severity":1,"message":"154","line":12,"column":14,"nodeType":"151","messageId":"152","endLine":12,"endColumn":18},{"ruleId":"149","severity":1,"message":"155","line":12,"column":20,"nodeType":"151","messageId":"152","endLine":12,"endColumn":24},{"ruleId":"149","severity":1,"message":"156","line":12,"column":26,"nodeType":"151","messageId":"152","endLine":12,"endColumn":30},{"ruleId":"149","severity":1,"message":"157","line":12,"column":32,"nodeType":"151","messageId":"152","endLine":12,"endColumn":38},{"ruleId":"149","severity":1,"message":"160","line":12,"column":40,"nodeType":"151","messageId":"152","endLine":12,"endColumn":46},{"ruleId":"149","severity":1,"message":"161","line":12,"column":48,"nodeType":"151","messageId":"152","endLine":12,"endColumn":52},{"ruleId":"149","severity":1,"message":"162","line":12,"column":54,"nodeType":"151","messageId":"152","endLine":12,"endColumn":61},{"ruleId":"149","severity":1,"message":"165","line":17,"column":18,"nodeType":"151","messageId":"152","endLine":17,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":24,"column":6,"nodeType":"168","endLine":24,"endColumn":16,"suggestions":"184"},{"ruleId":"149","severity":1,"message":"158","line":3,"column":3,"nodeType":"151","messageId":"152","endLine":3,"endColumn":7},{"ruleId":"149","severity":1,"message":"159","line":7,"column":3,"nodeType":"151","messageId":"152","endLine":7,"endColumn":8},{"ruleId":"149","severity":1,"message":"153","line":12,"column":10,"nodeType":"151","messageId":"152","endLine":12,"endColumn":12},{"ruleId":"149","severity":1,"message":"154","line":12,"column":14,"nodeType":"151","messageId":"152","endLine":12,"endColumn":18},{"ruleId":"149","severity":1,"message":"155","line":12,"column":20,"nodeType":"151","messageId":"152","endLine":12,"endColumn":24},{"ruleId":"149","severity":1,"message":"156","line":12,"column":26,"nodeType":"151","messageId":"152","endLine":12,"endColumn":30},{"ruleId":"149","severity":1,"message":"157","line":12,"column":32,"nodeType":"151","messageId":"152","endLine":12,"endColumn":38},{"ruleId":"149","severity":1,"message":"160","line":12,"column":40,"nodeType":"151","messageId":"152","endLine":12,"endColumn":46},{"ruleId":"149","severity":1,"message":"161","line":12,"column":48,"nodeType":"151","messageId":"152","endLine":12,"endColumn":52},{"ruleId":"149","severity":1,"message":"162","line":12,"column":54,"nodeType":"151","messageId":"152","endLine":12,"endColumn":61},{"ruleId":"149","severity":1,"message":"165","line":17,"column":18,"nodeType":"151","messageId":"152","endLine":17,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":24,"column":6,"nodeType":"168","endLine":24,"endColumn":16,"suggestions":"185"},{"ruleId":"149","severity":1,"message":"158","line":3,"column":3,"nodeType":"151","messageId":"152","endLine":3,"endColumn":7},{"ruleId":"149","severity":1,"message":"159","line":7,"column":3,"nodeType":"151","messageId":"152","endLine":7,"endColumn":8},{"ruleId":"149","severity":1,"message":"153","line":12,"column":10,"nodeType":"151","messageId":"152","endLine":12,"endColumn":12},{"ruleId":"149","severity":1,"message":"154","line":12,"column":14,"nodeType":"151","messageId":"152","endLine":12,"endColumn":18},{"ruleId":"149","severity":1,"message":"155","line":12,"column":20,"nodeType":"151","messageId":"152","endLine":12,"endColumn":24},{"ruleId":"149","severity":1,"message":"156","line":12,"column":26,"nodeType":"151","messageId":"152","endLine":12,"endColumn":30},{"ruleId":"149","severity":1,"message":"157","line":12,"column":32,"nodeType":"151","messageId":"152","endLine":12,"endColumn":38},{"ruleId":"149","severity":1,"message":"160","line":12,"column":40,"nodeType":"151","messageId":"152","endLine":12,"endColumn":46},{"ruleId":"149","severity":1,"message":"161","line":12,"column":48,"nodeType":"151","messageId":"152","endLine":12,"endColumn":52},{"ruleId":"149","severity":1,"message":"162","line":12,"column":54,"nodeType":"151","messageId":"152","endLine":12,"endColumn":61},{"ruleId":"149","severity":1,"message":"165","line":17,"column":18,"nodeType":"151","messageId":"152","endLine":17,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":24,"column":6,"nodeType":"168","endLine":24,"endColumn":16,"suggestions":"186"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'If' is defined but never used.","'Then' is defined but never used.","'Else' is defined but never used.","'When' is defined but never used.","'Unless' is defined but never used.","'Form' is defined but never used.","'Alert' is defined but never used.","'Switch' is defined but never used.","'Case' is defined but never used.","'Default' is defined but never used.","'calcType1' is assigned a value but never used.","'setCalcType1' is assigned a value but never used.","'setError1' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'solutionInsertLocalStorage'. Either include it or remove the dependency array.","ArrayExpression",["187"],["188"],["189"],"'areTheNumbersAlmostEqual' is assigned a value but never used.","'InputGroup' is defined but never used.","'Turtle' is defined but never used.","'newItem' is assigned a value but never used.","'setnewItem' is assigned a value but never used.","'counter' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["190"],"Expected '!==' and instead saw '!='.",["191"],["192"],["193"],{"desc":"194","fix":"195"},{"desc":"194","fix":"196"},{"desc":"194","fix":"197"},{"desc":"194","fix":"198"},{"desc":"194","fix":"199"},{"desc":"194","fix":"200"},{"desc":"194","fix":"201"},"Update the dependencies array to be: [solution, solutionInsertLocalStorage]",{"range":"202","text":"203"},{"range":"204","text":"203"},{"range":"205","text":"203"},{"range":"206","text":"203"},{"range":"207","text":"203"},{"range":"208","text":"203"},{"range":"209","text":"203"},[769,779],"[solution, solutionInsertLocalStorage]",[773,783],[847,857],[965,975],[672,682],[672,682],[672,682]]