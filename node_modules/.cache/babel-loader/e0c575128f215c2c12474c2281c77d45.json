{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sever\\\\Desktop\\\\Mahte Programm\\\\Maht App\\\\TriangleCalculator\\\\src\\\\components\\\\Pythagoras.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Form, Container, Row, Col, Alert, InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from \"react-if\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pythagoras() {\n  _s();\n\n  const [calcType1, setCalcType1] = useState(0.0);\n  const [sideA, setSideA] = useState(0.0);\n  const [sideB, setSideB] = useState(0.0);\n  const [sideC, setSideC] = useState(0.0);\n  const [solution, setSolution] = useState(0.0);\n  const [error1, setError1] = useState(\"\");\n  const [items, setItems] = useState(JSON.parse(localStorage.getItem(\"storage\")));\n  useEffect(() => {\n    localStorage.setItem(\"storage\", JSON.stringify(items));\n  }, [items]);\n  useEffect(() => {\n    solutionInsertLocalStorage();\n    setError1(\"\");\n  }, [solution]);\n\n  const areTheNumbersAlmostEqual = (num1, num2) => {\n    return Math.abs(num1 - num2) < Number.EPSILON;\n  };\n\n  const calculateSolution = () => {\n    if (calcType1 === \"Hypotenuse / Seite γ\") {\n      setError1(\"\");\n    } else if (calcType1 === \"Seite α / Seite β\") {\n      if (sideC > sideB) {\n        setError1(\"\");\n      } else if (sideC <= sideB) {\n        setError1(\"Invalider input: stellen sie Sicher das γ > α/β\");\n      }\n    }\n  };\n\n  const solutionInsertLocalStorage = () => {\n    setItems([...items, {\n      solution: solution,\n      calcType: calcType1,\n      sideA: sideA,\n      sideB: sideB,\n      sideC: sideC,\n      angleA: null,\n      angleB: null,\n      angleC: null,\n      error: error1\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            onChange: e => {\n              console.log(\"e.target.value\", e.target.value);\n              setCalcType1(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"Welche Seite wollen Sie Berechnen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Hypotenuse / Seite \\u03B3\",\n              children: \"Hypotenuse / Seite \\u03B3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Seite \\u03B1 / Seite \\u03B2\",\n              children: \"Seite \\u03B1 / Seite \\u03B2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Case, {\n        condition: calcType1 === \"Hypotenuse / Seite γ\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 5,\n              children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  onChange: e => {\n                    setSideA(parseFloat(e.target.value));\n                  },\n                  placeholder: \"Seite \\u03B1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Seite \\u03B1\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  onChange: e => setSideB(parseFloat(e.target.value)),\n                  placeholder: \"Seite \\u03B2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Seite \\u03B2\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"justify-content-md-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    let result = Math.round(Math.sqrt(Math.pow(sideA, 2) + Math.pow(sideB, 2)) * 10000) / 10000;\n                    setSideC(result);\n                    setSolution(result);\n                    calculateSolution();\n                    window.location.reload(false);\n                  },\n                  variant: \"primary\",\n                  children: \"Berechnen!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Case, {\n        condition: calcType1 === \"Seite α / Seite β\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 5,\n              children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  onChange: e => {\n                    setSideB(parseFloat(e.target.value));\n                  },\n                  placeholder: \"Seite \\u03B2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Seite \\u03B2\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  onChange: e => setSideC(parseFloat(e.target.value)),\n                  placeholder: \"Hypotenuse / Seite \\u03B3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Hypotenuse / Seite \\u03B3\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"justify-content-md-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    let result = Math.round(Math.sqrt(Math.pow(sideC, 2) - Math.pow(sideB, 2)) * 10000) / 10000;\n                    setSideA(result);\n                    setSolution(result);\n                    calculateSolution();\n                    window.location.reload(false);\n                  },\n                  variant: \"primary\",\n                  children: \"Berechnen!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Default, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"primary\",\n                children: \"Bitte w\\xE4hlen Sie eine Seite zum Ausrechnen!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pythagoras, \"mEp21vYvp04ngd5itSrbRdufNPg=\");\n\n_c = Pythagoras;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pythagoras\");","map":{"version":3,"sources":["C:/Users/sever/Desktop/Mahte Programm/Maht App/TriangleCalculator/src/components/Pythagoras.js"],"names":["useState","useEffect","Form","Container","Row","Col","Alert","InputGroup","FormControl","Button","If","Then","Else","When","Unless","Switch","Case","Default","Pythagoras","calcType1","setCalcType1","sideA","setSideA","sideB","setSideB","sideC","setSideC","solution","setSolution","error1","setError1","items","setItems","JSON","parse","localStorage","getItem","setItem","stringify","solutionInsertLocalStorage","areTheNumbersAlmostEqual","num1","num2","Math","abs","Number","EPSILON","calculateSolution","calcType","angleA","angleB","angleC","error","e","console","log","target","value","parseFloat","result","round","sqrt","pow","window","location","reload"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from \"react-if\";\r\nexport default function Pythagoras() {\r\n  const [calcType1, setCalcType1] = useState(0.0);\r\n  const [sideA, setSideA] = useState(0.0);\r\n  const [sideB, setSideB] = useState(0.0);\r\n  const [sideC, setSideC] = useState(0.0);\r\n  const [solution, setSolution] = useState(0.0);\r\n  const [error1, setError1] = useState(\"\");\r\n  const [items, setItems] = useState(\r\n    JSON.parse(localStorage.getItem(\"storage\"))\r\n  );\r\n  useEffect(() => {\r\n    localStorage.setItem(\"storage\", JSON.stringify(items));\r\n  }, [items]);\r\n  useEffect(() => {\r\n    solutionInsertLocalStorage();\r\n    setError1(\"\");\r\n  }, [solution]);\r\n  const areTheNumbersAlmostEqual = (num1, num2) => {\r\n    return Math.abs( num1 - num2 ) < Number.EPSILON;\r\n}\r\n  const calculateSolution = () => {\r\n    if (calcType1 === \"Hypotenuse / Seite γ\") {\r\n      setError1(\"\");\r\n    } else if (calcType1 === \"Seite α / Seite β\") {\r\n      if (sideC > sideB   ) {\r\n        setError1(\"\");\r\n      } else if(sideC <= sideB ){\r\n        setError1(\"Invalider input: stellen sie Sicher das γ > α/β\");\r\n      }\r\n    }\r\n  };\r\n  const solutionInsertLocalStorage = () => {\r\n    setItems([\r\n      ...items,\r\n      {\r\n        solution: solution,\r\n        calcType: calcType1,\r\n        sideA: sideA,\r\n        sideB: sideB,\r\n        sideC: sideC,\r\n        angleA: null,\r\n        angleB: null,\r\n        angleC: null,\r\n        error: error1\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={5}>\r\n            <Form.Select\r\n              onChange={(e) => {\r\n                console.log(\"e.target.value\", e.target.value);\r\n                setCalcType1(e.target.value);\r\n              }}\r\n            >\r\n              <option value=\"0\">Welche Seite wollen Sie Berechnen</option>\r\n              <option value=\"Hypotenuse / Seite γ\">Hypotenuse / Seite γ</option>\r\n              <option value=\"Seite α / Seite β\">Seite α / Seite β</option>\r\n            </Form.Select>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/* Condition for rendering selected Calculation Method for which Side */}\r\n      <Switch>\r\n        {/*  Condtion for Calculate Side C*/}\r\n        <Case condition={calcType1 === \"Hypotenuse / Seite γ\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    onChange={(e) => {\r\n                      setSideA(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite α\"\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite α\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    onChange={(e) => setSideB(parseFloat(e.target.value))}\r\n                    placeholder=\"Seite β\"\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite β\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      let result =\r\n                        Math.round(\r\n                          Math.sqrt(Math.pow(sideA, 2) + Math.pow(sideB, 2)) *\r\n                            10000\r\n                        ) / 10000;\r\n                      setSideC(result);\r\n                      setSolution(result);\r\n                      calculateSolution();\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/*  Condtion for Calculate Side A / Side B */}\r\n        <Case condition={calcType1 === \"Seite α / Seite β\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    onChange={(e) => {\r\n                      setSideB(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite β\"\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite β\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    onChange={(e) => setSideC(parseFloat(e.target.value))}\r\n                    placeholder=\"Hypotenuse / Seite γ\"\r\n                  />\r\n                  <InputGroup.Text\r\n                    className=\"input\"\r\n                    placeholder=\"Hypotenuse / Seite γ\"\r\n                  >\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      \r\n                      let result =\r\n                        Math.round(\r\n                          Math.sqrt(Math.pow(sideC, 2) - Math.pow(sideB, 2)) *\r\n                            10000\r\n                        ) / 10000;\r\n                      setSideA(result);\r\n                      setSolution(result);\r\n                      calculateSolution();\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n\r\n                  \r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/* Condtion for Default value */}\r\n        <Default>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <Alert variant={\"primary\"}>\r\n                  Bitte wählen Sie eine Seite zum Ausrechnen!\r\n                </Alert>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Default>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}