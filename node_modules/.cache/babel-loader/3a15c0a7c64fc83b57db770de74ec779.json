{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sever\\\\Desktop\\\\Mahte Programm\\\\Maht App\\\\TriangleCalculator\\\\src\\\\components\\\\Winkel.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Form, Container, Row, Col, Alert, InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from \"react-if\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Winkel() {\n  _s();\n\n  const [calcType1, setCalcType1] = useState(0.0);\n  const [sideA, setSideA] = useState(0.0);\n  const [sideB, setSideB] = useState(0.0);\n  const [sideC, setSideC] = useState(0.0);\n  const [angleA, setAngleA] = useState(0.0);\n  const [angleB, setAngleB] = useState(0.0);\n  const [angleC, setAngleC] = useState(0.0);\n  const [solution, setSolution] = useState(0.0);\n  const [error1, setError1] = useState(\"\");\n  const [items, setItems] = useState(JSON.parse(localStorage.getItem(\"storage\")));\n  useEffect(() => {\n    localStorage.setItem(\"storage\", JSON.stringify(items));\n  }, [items]);\n  useEffect(() => {\n    solutionInsertLocalStorage();\n  }, [solution]);\n\n  const solutionInsertLocalStorage = () => {\n    setItems([...items, {\n      solution: solution,\n      calcType: calcType1,\n      sideA: null,\n      sideB: null,\n      sideC: null,\n      angleA: angleA,\n      angleB: angleB,\n      angleC: angleC,\n      error: error1\n    }]);\n  };\n\n  function toRadians(angle) {\n    return angle * (Math.PI / 180);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            onChange: e => {\n              console.log(\"e.target.value\", e.target.value);\n              setCalcType1(e.target.value);\n            },\n            onFocus: e => {\n              e.target.value = \"0\";\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"Welche Seite wollen Sie Berechnen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Angle A from a, B, b\",\n              children: \"Angle A from a, B, b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Angle A from a, C, c\",\n              children: \"Angle A from a, C, c\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Angle B from b, A, a\",\n              children: \"Angle B from b, A, a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Angle B from b, C, c\",\n              children: \"Angle B from b, C, c\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Angle C from c, A, a\",\n              children: \"Angle C from c, A, a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Angle C from c, B, b\",\n              children: \"Angle C from c, B, b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Case, {\n        condition: calcType1 === \"Angle A from a, B, b\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 5,\n              children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => {\n                    setSideA(parseFloat(e.target.value));\n                  },\n                  placeholder: \"Seite \\u03B1\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Seite \\u03B1\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => {\n                    if (e.target.value >= 180) {\n                      setError1(\"Winkel ist 180 oder grÃ¶sser\");\n                    } else {\n                      setError1(\"\");\n                      setAngleB(parseFloat(e.target.value));\n                    }\n                  },\n                  placeholder: \"Winkel \\u03B2\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Winkel \\u03B2\",\n                  children: \"\\xB0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => setSideB(parseFloat(e.target.value)),\n                  placeholder: \"Seite \\u03B2\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Seite \\u03B2\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"justify-content-md-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    let result = Math.asin(toRadians(sideA) * Math.sin(toRadians(angleB)) / toRadians(sideB)) * (180 / Math.PI);\n                    setAngleA(result);\n                    setAngleC(180 - result - angleB);\n                    setSolution(result);\n                    window.location.reload(false);\n                  },\n                  variant: \"primary\",\n                  children: \"Berechnen!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Case, {\n        condition: calcType1 === \"Angle A from a, C, c\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 5,\n              children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => {\n                    setSideA(parseFloat(e.target.value));\n                  },\n                  placeholder: \"Seite \\u03B1\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Seite \\u03B1\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => {\n                    if (e.target.value >= 180) {\n                      setError1(\"Winkel ist 180 oder grÃ¶sser\");\n                    } else {\n                      setError1(\"\");\n                      setAngleC(parseFloat(e.target.value));\n                    }\n                  },\n                  placeholder: \"Winkel \\u03B3\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Winkel \\u03B2\",\n                  children: \"\\xB0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => setSideC(parseFloat(e.target.value)),\n                  placeholder: \"Seite \\u03B3\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Seite \\u03B2\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"justify-content-md-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    let result = Math.asin(toRadians(sideA) * Math.sin(toRadians(angleC)) / toRadians(sideC)) * (180 / Math.PI);\n                    setAngleA(result);\n                    setAngleB(180 - result - angleC);\n                    setSolution(result);\n                    window.location.reload(false);\n                  },\n                  variant: \"primary\",\n                  children: \"Berechnen!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Case, {\n        condition: calcType1 === \"Angle B from b, A, a\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 5,\n              children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => {\n                    setSideB(parseFloat(e.target.value));\n                  },\n                  placeholder: \"Seite \\u03B2\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Winkel \\u03B2\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => {\n                    if (e.target.value >= 180) {\n                      setError1(\"Winkel ist 180 oder grÃ¶sser\");\n                    } else {\n                      setError1(\"\");\n                      setAngleA(parseFloat(e.target.value));\n                    }\n                  },\n                  placeholder: \"Winkel \\u03B1\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Winkel \\u03B2\",\n                  children: \"\\xB0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => setSideA(parseFloat(e.target.value)),\n                  placeholder: \"Seite \\u03B1\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Seite \\u03B2\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"justify-content-md-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    let result = Math.asin(toRadians(sideB) * Math.sin(toRadians(angleA)) / toRadians(sideA)) * (180 / Math.PI);\n                    setAngleB(result);\n                    setAngleC(180 - result - angleA);\n                    setSolution(result);\n                    window.location.reload(false);\n                  },\n                  variant: \"primary\",\n                  children: \"Berechnen!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Case, {\n        condition: calcType1 === \"Angle B from b, C, c\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 5,\n              children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => {\n                    setSideB(parseFloat(e.target.value));\n                  },\n                  placeholder: \"Seite \\u03B2\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Winkel \\u03B2\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => {\n                    if (e.target.value >= 180) {\n                      setError1(\"Winkel ist 180 oder grÃ¶sser\");\n                    } else {\n                      setError1(\"\");\n                      setAngleC(parseFloat(e.target.value));\n                    }\n                  },\n                  placeholder: \"Winkel \\u03B3\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Winkel \\u03B2\",\n                  children: \"\\xB0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => setSideC(parseFloat(e.target.value)),\n                  placeholder: \"Seite \\u03B3\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Seite \\u03B2\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"justify-content-md-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    let result = Math.asin(toRadians(sideB) * Math.sin(toRadians(angleC)) / toRadians(sideC)) * (180 / Math.PI);\n                    setAngleB(result);\n                    setAngleC(180 - result - angleC);\n                    setSolution(result);\n                    window.location.reload(false);\n                  },\n                  variant: \"primary\",\n                  children: \"Berechnen!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Case, {\n        condition: calcType1 === \"Angle C from c, A, a\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 5,\n              children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => {\n                    setSideC(parseFloat(e.target.value));\n                  },\n                  placeholder: \"Seite \\u03B3\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Winkel \\u03B2\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => {\n                    if (e.target.value >= 180) {\n                      setError1(\"Winkel ist 180 oder grÃ¶sser\");\n                    } else {\n                      setError1(\"\");\n                      setAngleA(parseFloat(e.target.value));\n                    }\n                  },\n                  placeholder: \"Winkel \\u03B1\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Winkel \\u03B2\",\n                  children: \"\\xB0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => setSideA(parseFloat(e.target.value)),\n                  placeholder: \"Seite \\u03B1\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Seite \\u03B2\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"justify-content-md-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    let result = Math.asin(toRadians(sideC) * Math.sin(toRadians(angleA)) / toRadians(sideA)) * (180 / Math.PI);\n                    setAngleC(result);\n                    setAngleB(180 - result - angleA);\n                    setSolution(result);\n                    window.location.reload(false);\n                  },\n                  variant: \"primary\",\n                  children: \"Berechnen!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Case, {\n        condition: calcType1 === \"Angle C from c, B, b\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 5,\n              children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => {\n                    setSideC(parseFloat(e.target.value));\n                  },\n                  placeholder: \"Seite \\u03B3\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Winkel \\u03B2\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => {\n                    if (e.target.value >= 180) {\n                      setError1(\"Winkel ist 180 oder grÃ¶sser\");\n                    } else {\n                      setError1(\"\");\n                      setAngleB(parseFloat(e.target.value));\n                    }\n                  },\n                  placeholder: \"Winkel \\u03B2\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Winkel \\u03B2\",\n                  children: \"\\xB0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  class: \"input\",\n                  onChange: e => setSideB(parseFloat(e.target.value)),\n                  placeholder: \"Seite \\u03B2\",\n                  onFocus: e => {\n                    e.target.value = \"\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  className: \"input\",\n                  placeholder: \"Seite \\u03B2\",\n                  children: \"cm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"justify-content-md-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    let result = Math.asin(toRadians(sideC) * Math.sin(toRadians(angleB)) / toRadians(sideB)) * (180 / Math.PI);\n                    setAngleC(result);\n                    setAngleA(180 - result - angleB);\n                    setSolution(result);\n                    window.location.reload(false);\n                  },\n                  variant: \"primary\",\n                  children: \"Berechnen!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Default, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"primary\",\n                children: \"Bitte w\\xE4hlen Sie eine Seite zum Ausrechnen!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(If, {\n      condition: error1 != \"\",\n      children: /*#__PURE__*/_jsxDEV(Then, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"danger\",\n                children: error1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Winkel, \"5qKKI8+fibu8UsnNa9BTUIU+iw4=\");\n\n_c = Winkel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Winkel\");","map":{"version":3,"sources":["C:/Users/sever/Desktop/Mahte Programm/Maht App/TriangleCalculator/src/components/Winkel.js"],"names":["useState","useEffect","Form","Container","Row","Col","Alert","InputGroup","FormControl","Button","If","Then","Else","When","Unless","Switch","Case","Default","Winkel","calcType1","setCalcType1","sideA","setSideA","sideB","setSideB","sideC","setSideC","angleA","setAngleA","angleB","setAngleB","angleC","setAngleC","solution","setSolution","error1","setError1","items","setItems","JSON","parse","localStorage","getItem","setItem","stringify","solutionInsertLocalStorage","calcType","error","toRadians","angle","Math","PI","e","console","log","target","value","parseFloat","result","asin","sin","window","location","reload"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from \"react-if\";\r\n\r\nexport default function Winkel() {\r\n  const [calcType1, setCalcType1] = useState(0.0);\r\n  const [sideA, setSideA] = useState(0.0);\r\n  const [sideB, setSideB] = useState(0.0);\r\n  const [sideC, setSideC] = useState(0.0);\r\n  const [angleA, setAngleA] = useState(0.0);\r\n  const [angleB, setAngleB] = useState(0.0);\r\n  const [angleC, setAngleC] = useState(0.0);\r\n  const [solution, setSolution] = useState(0.0);\r\n  const [error1, setError1] = useState(\"\");\r\n  const [items, setItems] = useState(\r\n    JSON.parse(localStorage.getItem(\"storage\"))\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"storage\", JSON.stringify(items));\r\n  }, [items]);\r\n  useEffect(() => {\r\n    solutionInsertLocalStorage();\r\n  }, [solution]);\r\n  const solutionInsertLocalStorage = () => {\r\n    setItems([\r\n      ...items,\r\n      {\r\n        solution: solution,\r\n        calcType: calcType1,\r\n        sideA: null,\r\n        sideB: null,\r\n        sideC: null,\r\n        angleA: angleA,\r\n        angleB: angleB,\r\n        angleC: angleC,\r\n        error: error1\r\n      },\r\n    ]);\r\n  };\r\n  function toRadians(angle) {\r\n    return angle * (Math.PI / 180);\r\n  }\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={5}>\r\n            <Form.Select\r\n              onChange={(e) => {\r\n                console.log(\"e.target.value\", e.target.value);\r\n                setCalcType1(e.target.value);\r\n              }}\r\n              onFocus={(e) => {\r\n                e.target.value = \"0\";\r\n              }}\r\n            >\r\n              <option value=\"0\">Welche Seite wollen Sie Berechnen</option>\r\n              <option value=\"Angle A from a, B, b\">Angle A from a, B, b</option>\r\n              <option value=\"Angle A from a, C, c\">Angle A from a, C, c</option>\r\n              <option value=\"Angle B from b, A, a\">Angle B from b, A, a</option>\r\n              <option value=\"Angle B from b, C, c\">Angle B from b, C, c</option>\r\n              <option value=\"Angle C from c, A, a\">Angle C from c, A, a</option>\r\n              <option value=\"Angle C from c, B, b\">Angle C from c, B, b</option>\r\n            </Form.Select>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/* Condition for rendering selected Calculation Method for which Side */}\r\n      <Switch>\r\n        {/*  Angle A from a, B, b*/}\r\n        <Case condition={calcType1 === \"Angle A from a, B, b\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      setSideA(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite Î±\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite Î±\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 180) {\r\n                        setError1(\"Winkel ist 180 oder grÃ¶sser\");\r\n                      } else {\r\n                        setError1(\"\");\r\n                        setAngleB(parseFloat(e.target.value));\r\n                      }\r\n                    }}\r\n                    placeholder=\"Winkel Î²\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel Î²\">\r\n                    Â°\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => setSideB(parseFloat(e.target.value))}\r\n                    placeholder=\"Seite Î²\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite Î²\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      let result =\r\n                        Math.asin(\r\n                          (toRadians(sideA) * Math.sin(toRadians(angleB))) /\r\n                            toRadians(sideB)\r\n                        ) *\r\n                        (180 / Math.PI);\r\n                      setAngleA(result);\r\n                      setAngleC(180 - result - angleB);\r\n                      setSolution(result);\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/*  Angle A from a, C, c*/}\r\n        <Case condition={calcType1 === \"Angle A from a, C, c\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      setSideA(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite Î±\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite Î±\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 180) {\r\n                        setError1(\"Winkel ist 180 oder grÃ¶sser\");\r\n                      } else {\r\n                        setError1(\"\");\r\n                        setAngleC(parseFloat(e.target.value));\r\n                      }\r\n                    }}\r\n                    placeholder=\"Winkel Î³\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel Î²\">\r\n                    Â°\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => setSideC(parseFloat(e.target.value))}\r\n                    placeholder=\"Seite Î³\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite Î²\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      let result =\r\n                        Math.asin(\r\n                          (toRadians(sideA) * Math.sin(toRadians(angleC))) /\r\n                            toRadians(sideC)\r\n                        ) *\r\n                        (180 / Math.PI);\r\n                      setAngleA(result);\r\n                      setAngleB(180 - result - angleC);\r\n                      setSolution(result);\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/*  Angle B from b, A, a */}\r\n        <Case condition={calcType1 === \"Angle B from b, A, a\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      setSideB(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite Î²\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel Î²\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 180) {\r\n                        setError1(\"Winkel ist 180 oder grÃ¶sser\");\r\n                      } else {\r\n                        setError1(\"\");\r\n                        setAngleA(parseFloat(e.target.value));\r\n                      }\r\n                    }}\r\n                    placeholder=\"Winkel Î±\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel Î²\">\r\n                    Â°\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => setSideA(parseFloat(e.target.value))}\r\n                    placeholder=\"Seite Î±\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite Î²\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      let result =\r\n                        Math.asin(\r\n                          (toRadians(sideB) * Math.sin(toRadians(angleA))) /\r\n                            toRadians(sideA)\r\n                        ) *\r\n                        (180 / Math.PI);\r\n                      setAngleB(result);\r\n                      setAngleC(180 - result - angleA);\r\n                      setSolution(result);\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/*  Angle B from b, C, c */}\r\n        <Case condition={calcType1 === \"Angle B from b, C, c\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      setSideB(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite Î²\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel Î²\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 180) {\r\n                        setError1(\"Winkel ist 180 oder grÃ¶sser\");\r\n                      } else {\r\n                        setError1(\"\");\r\n                        setAngleC(parseFloat(e.target.value));\r\n                      }\r\n                    }}\r\n                    placeholder=\"Winkel Î³\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel Î²\">\r\n                    Â°\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => setSideC(parseFloat(e.target.value))}\r\n                    placeholder=\"Seite Î³\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite Î²\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      let result =\r\n                        Math.asin(\r\n                          (toRadians(sideB) * Math.sin(toRadians(angleC))) /\r\n                            toRadians(sideC)\r\n                        ) *\r\n                        (180 / Math.PI);\r\n                      setAngleB(result);\r\n                      setAngleC(180 - result - angleC);\r\n                      setSolution(result);\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/*  Angle C from c, A, a */}\r\n        <Case condition={calcType1 === \"Angle C from c, A, a\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      setSideC(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite Î³\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel Î²\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 180) {\r\n                        setError1(\"Winkel ist 180 oder grÃ¶sser\");\r\n                      } else {\r\n                        setError1(\"\");\r\n                        setAngleA(parseFloat(e.target.value));\r\n                      }\r\n                    }}\r\n                    placeholder=\"Winkel Î±\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel Î²\">\r\n                    Â°\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => setSideA(parseFloat(e.target.value))}\r\n                    placeholder=\"Seite Î±\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite Î²\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      let result =\r\n                        Math.asin(\r\n                          (toRadians(sideC) * Math.sin(toRadians(angleA))) /\r\n                            toRadians(sideA)\r\n                        ) *\r\n                        (180 / Math.PI);\r\n                      setAngleC(result);\r\n                      setAngleB(180 - result - angleA);\r\n                      setSolution(result);\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/*  Angle C from c, B, b */}\r\n        <Case condition={calcType1 === \"Angle C from c, B, b\"}>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      setSideC(parseFloat(e.target.value));\r\n                    }}\r\n                    placeholder=\"Seite Î³\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel Î²\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 180) {\r\n                        setError1(\"Winkel ist 180 oder grÃ¶sser\");\r\n                      } else {\r\n                        setError1(\"\");\r\n                        setAngleB(parseFloat(e.target.value));\r\n                      }\r\n                    }}\r\n                    placeholder=\"Winkel Î²\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Winkel Î²\">\r\n                    Â°\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    class={\"input\"}\r\n                    onChange={(e) => setSideB(parseFloat(e.target.value))}\r\n                    placeholder=\"Seite Î²\"\r\n                    onFocus={(e) => {\r\n                      e.target.value = \"\";\r\n                    }}\r\n                  />\r\n                  <InputGroup.Text className=\"input\" placeholder=\"Seite Î²\">\r\n                    cm\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      let result =\r\n                        Math.asin(\r\n                          (toRadians(sideC) * Math.sin(toRadians(angleB))) /\r\n                            toRadians(sideB)\r\n                        ) *\r\n                        (180 / Math.PI);\r\n                      setAngleC(result);\r\n                      setAngleA(180 - result - angleB);\r\n                      setSolution(result);\r\n                      window.location.reload(false);\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Berechnen!\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Case>\r\n\r\n        {/* Condtion for Default value */}\r\n        <Default>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <Alert variant={\"primary\"}>\r\n                  Bitte wÃ¤hlen Sie eine Seite zum Ausrechnen!\r\n                </Alert>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Default>\r\n      </Switch>\r\n      <If condition={error1 != \"\"}>\r\n        <Then>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={5}>\r\n                <Alert variant={\"danger\"}>{error1}</Alert>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Then>\r\n      </If>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}